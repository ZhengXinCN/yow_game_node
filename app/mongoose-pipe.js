// Generated by CoffeeScript 1.4.0
var Promise;

Promise = require('mongoose').Promise;

Promise.prototype.pipe = function(success, failure) {
  var identity, nextPromise;
  nextPromise = new Promise();
  identity = function(i) {
    return i;
  };
  success = success || identity;
  failure = failure || identity;
  this.addBack(function(error, value) {
    var processed, trigger, _ref;
    _ref = error ? [nextPromise.error, failure(error)] : [nextPromise.complete, success(value)], trigger = _ref[0], processed = _ref[1];
    if (processed instanceof Promise) {
      processed.addErrback(nextPromise.error.bind(nextPromise));
      return processed.addCallback(nextPromise.complete.bind(nextPromise));
    } else {
      return trigger.bind(nextPromise)(processed);
    }
  });
  return nextPromise;
};

Promise.prototype.resolver = function() {
  return this.resolve.bind(this);
};
