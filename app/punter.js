// Generated by CoffeeScript 1.4.0
var NoModelFound, Promise, PunterModel, PunterSchema, Schema, create, db, db_url, firstModel, load, mongoose, show;

mongoose = require('mongoose');

require('express-mongoose');

Promise = mongoose.Promise;

require('./mongoose-pipe');

db_url = process.env.MONGOLAB_URL || "mongodb://localhost//yow_game";

db = mongoose.connect(db_url);

Schema = mongoose.Schema;

PunterSchema = new Schema({
  fullName: {
    type: String,
    required: true
  },
  company: {
    type: String,
    required: true
  },
  emailAddress: String
});

PunterModel = db.model("punters", PunterSchema);

NoModelFound = new Promise().error('No model found');

firstModel = function(arr) {
  return (arr != null ? arr[0] : void 0) || NoModelFound;
};

load = function(id, next) {
  return PunterModel.find({
    _id: id
  }).exec().pipe(firstModel).addBack(next);
};

show = function(req, resp) {
  if (req.punter) {
    return resp.send(200, req.punter);
  } else {
    return resp.send(404, {
      message: "No model found"
    });
  }
};

create = function(req, resp) {
  var promise, punter;
  if (!req.body) {
    return resp.send(400, 'No content');
  }
  punter = new PunterModel();
  punter.fullName = req.body.fullName;
  punter.company = req.body.company;
  punter.emailAddress = req.body.emailAddress;
  promise = new Promise();
  promise.pipe(function(p) {
    return resp.redirect("" + req.url + "/" + p._id);
  }, function(err) {
    return resp.send(400, err);
  });
  return punter.save(promise.resolver());
};

exports.load = load;

exports.show = show;

exports.create = create;
