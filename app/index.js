// Generated by CoffeeScript 1.4.0
var PunterModel, PunterSchema, Schema, app, assets, db, db_url, express, mongoose, port, stylus;

express = require('express');

stylus = require('stylus');

assets = require('connect-assets');

require('express-mongoose');

app = express();

app.use(assets());

app.use(express["static"](process.cwd() + '/public'));

app.use(express.bodyParser());

app.set('view engine', 'jade');

app.get('/', function(req, resp) {
  return resp.render('index');
});

app.get('/data', function(req, resp) {
  var json;
  json = require('../data/techradar.json');
  resp.set({
    'Content-Type': 'text/json'
  });
  return resp.send(json);
});

app.get('/result', function(req, resp) {
  return resp.render('result');
});

mongoose = require('mongoose');

db_url = process.env.MONGOLAB_URL || "mongodb://localhost//yow_game";

db = mongoose.connect(db_url);

Schema = mongoose.Schema;

PunterSchema = new Schema({
  fullName: {
    type: String,
    required: true
  },
  company: {
    type: String,
    required: true
  },
  emailAddress: String
});

PunterModel = db.model("punters", PunterSchema);

app.get('/punters/:id', function(req, resp) {
  return resp.send(PunterModel.find({
    _id: req.param('id')
  }));
});

app.post('/punters', function(req, resp) {
  var punter;
  if (!/application\/json/.test(req.headers['content-type'])) {
    return resp.send(400, 'Unsupported content-type');
  }
  if (!req.body) {
    return resp.status(400, 'No content');
  }
  punter = new PunterModel();
  punter.fullName = req.body.fullName;
  punter.company = req.body.company;
  punter.emailAddress = req.body.emailAddress;
  return punter.save(function(err, punter) {
    if (err) {
      return resp.send(400, err);
    } else {
      return resp.redirect("punters/" + punter._id);
    }
  });
});

port = process.env.PORT || process.env.VMC_APP_PORT || 3000;

app.listen(port, function() {
  return console.log("Listening on " + port + "\nPress CTRL-C to stop server.");
});
